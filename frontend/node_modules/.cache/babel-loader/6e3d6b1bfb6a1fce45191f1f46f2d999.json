{"ast":null,"code":"import axios from 'axios';\n\n//remove before pushing to production branch\nconst sleep = delay => {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n};\n\naxios.defaults.baseURL = 'http://oddbbsrv01:5000/api'; //fake delay\n\naxios.interceptors.response.use(response => {\n  return sleep(2000).then(() => {\n    return response;\n  }).catch(error => {\n    console.log(error);\n    return Promise.reject(error);\n  });\n});\n\nconst responseBody = response => response.data;\n\nconst requests = {\n  get: url => axios.get(url).then(responseBody),\n  post: (url, body) => axios.post(url).then(responseBody),\n  put: (url, body) => axios.put(url).then(responseBody),\n  del: url => axios.delete(url).then(responseBody)\n};\nconst Activities = {\n  list: () => requests.get('/activities')\n};\nconst agent = {\n  Activities\n};\nexport default agent;","map":{"version":3,"sources":["/home/gm/Downloads/reactivities/frontend/src/app/api/agent.ts"],"names":["axios","sleep","delay","Promise","resolve","setTimeout","defaults","baseURL","interceptors","response","use","then","catch","error","console","log","reject","responseBody","data","requests","get","url","post","body","put","del","delete","Activities","list","agent"],"mappings":"AAAA,OAAOA,KAAP,MAA4C,OAA5C;;AAGA;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAmB;AAChC,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC/BC,IAAAA,UAAU,CAACD,OAAD,EAAUF,KAAV,CAAV;AACA,GAFM,CAAP;AAGA,CAJD;;AAMAF,KAAK,CAACM,QAAN,CAAeC,OAAf,GAAyB,4BAAzB,C,CAEA;;AACAP,KAAK,CAACQ,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAiCD,QAAD,IAAc;AAC7C,SAAOR,KAAK,CAAC,IAAD,CAAL,CACLU,IADK,CACA,MAAM;AACX,WAAOF,QAAP;AACA,GAHK,EAILG,KAJK,CAIEC,KAAD,IAAW;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAOV,OAAO,CAACa,MAAR,CAAeH,KAAf,CAAP;AACA,GAPK,CAAP;AAQA,CATD;;AAWA,MAAMI,YAAY,GAAOR,QAAJ,IAAmCA,QAAQ,CAACS,IAAjE;;AAEA,MAAMC,QAAQ,GAAG;AAChBC,EAAAA,GAAG,EAAMC,GAAJ,IAAoBrB,KAAK,CAACoB,GAAN,CAAaC,GAAb,EAAkBV,IAAlB,CAAuBM,YAAvB,CADT;AAEhBK,EAAAA,IAAI,EAAE,CAAID,GAAJ,EAAiBE,IAAjB,KAA8BvB,KAAK,CAACsB,IAAN,CAAcD,GAAd,EAAmBV,IAAnB,CAAwBM,YAAxB,CAFpB;AAGhBO,EAAAA,GAAG,EAAE,CAAIH,GAAJ,EAAiBE,IAAjB,KAA8BvB,KAAK,CAACwB,GAAN,CAAaH,GAAb,EAAkBV,IAAlB,CAAuBM,YAAvB,CAHnB;AAIhBQ,EAAAA,GAAG,EAAMJ,GAAJ,IAAoBrB,KAAK,CAAC0B,MAAN,CAAgBL,GAAhB,EAAqBV,IAArB,CAA0BM,YAA1B;AAJT,CAAjB;AAOA,MAAMU,UAAU,GAAG;AAClBC,EAAAA,IAAI,EAAE,MAAMT,QAAQ,CAACC,GAAT,CAAyB,aAAzB;AADM,CAAnB;AAIA,MAAMS,KAAK,GAAG;AACbF,EAAAA;AADa,CAAd;AAIA,eAAeE,KAAf","sourcesContent":["import axios, { Axios, AxiosResponse } from 'axios';\nimport { Activity } from '../models/Activity';\n\n//remove before pushing to production branch\nconst sleep = (delay: number) => {\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(resolve, delay);\n\t});\n};\n\naxios.defaults.baseURL = 'http://oddbbsrv01:5000/api';\n\n//fake delay\naxios.interceptors.response.use((response) => {\n\treturn sleep(2000)\n\t\t.then(() => {\n\t\t\treturn response;\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(error);\n\t\t\treturn Promise.reject(error);\n\t\t});\n});\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n\tget: <T>(url: string) => axios.get<T>(url).then(responseBody),\n\tpost: <T>(url: string, body: {}) => axios.post<T>(url).then(responseBody),\n\tput: <T>(url: string, body: {}) => axios.put<T>(url).then(responseBody),\n\tdel: <T>(url: string) => axios.delete<T>(url).then(responseBody)\n};\n\nconst Activities = {\n\tlist: () => requests.get<Activity[]>('/activities')\n};\n\nconst agent = {\n\tActivities\n};\n\nexport default agent;\n"]},"metadata":{},"sourceType":"module"}