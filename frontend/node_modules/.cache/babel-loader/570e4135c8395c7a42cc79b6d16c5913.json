{"ast":null,"code":"var _jsxFileName = \"/home/gm/Downloads/reactivities/frontend/src/app/layout/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport './App.css';\nimport NavBar from './navbar/NavigationBar';\nimport { v4 as uuid } from 'uuid';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\nimport ActivityDashboard from '../../features/activities/activityDashboard/ActivityDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [selectedActivity, setSelectedActivity] = useState(undefined);\n  const [activities, setActivities] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  useEffect(() => {\n    agent.get('http://192.168.0.150:5000/api/activities').then(response => {\n      console.log(response);\n      setActivities(response.data);\n    });\n  }, []);\n\n  function handleSelectActivity(id) {\n    setSelectedActivity(activities.find(x => x.id === id));\n  }\n\n  function handleCancelSelectActivity() {\n    setSelectedActivity(undefined);\n  }\n\n  function handleFormOpen(id) {\n    id ? handleSelectActivity(id) : handleCancelSelectActivity();\n    setEditMode(true);\n  }\n\n  function handleFormClose() {\n    setEditMode(false);\n  }\n\n  function handleCreateOrEditActivity(activity) {\n    activity.id ? setActivities([...activities.filter(x => x.id !== activity.id), activity]) : setActivities([...activities, { ...activity,\n      id: uuid()\n    }]);\n    setEditMode(false);\n    setSelectedActivity(activity);\n  }\n\n  function handleDeleteActivity(id) {\n    setActivities([...activities.filter(x => x.id !== id)]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      openForm: handleFormOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"mainAppContainer\",\n      children: /*#__PURE__*/_jsxDEV(ActivityDashboard, {\n        activities: activities,\n        selectedActivity: selectedActivity,\n        selectActivity: handleSelectActivity,\n        cancelSelectActivity: handleCancelSelectActivity,\n        editMode: editMode,\n        openForm: handleFormOpen,\n        closeForm: handleFormClose,\n        createOrEdit: handleCreateOrEditActivity,\n        deleteActivity: handleDeleteActivity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"A8u2snbmfMr/lokOEfN/ieWZ/HQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gm/Downloads/reactivities/frontend/src/app/layout/App.tsx"],"names":["React","Fragment","useEffect","useState","NavBar","v4","uuid","Container","ActivityDashboard","App","selectedActivity","setSelectedActivity","undefined","activities","setActivities","editMode","setEditMode","agent","get","then","response","console","log","data","handleSelectActivity","id","find","x","handleCancelSelectActivity","handleFormOpen","handleFormClose","handleCreateOrEditActivity","activity","filter","handleDeleteActivity"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport './App.css';\nimport { Activity } from '../models/Activity';\nimport NavBar from './navbar/NavigationBar';\nimport axios from 'axios';\nimport { v4 as uuid } from 'uuid';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\nimport ActivityDashboard from '../../features/activities/activityDashboard/ActivityDashboard';\n\nfunction App() {\n\tconst [ selectedActivity, setSelectedActivity ] = useState<Activity | undefined>(undefined);\n\tconst [ activities, setActivities ] = useState<Activity[]>([]);\n\tconst [ editMode, setEditMode ] = useState(false);\n\n\tuseEffect(() => {\n\t\tagent.get<Activity[]>('http://192.168.0.150:5000/api/activities').then((response) => {\n\t\t\tconsole.log(response);\n\t\t\tsetActivities(response.data);\n\t\t});\n\t}, []);\n\n\tfunction handleSelectActivity(id: string) {\n\t\tsetSelectedActivity(activities.find((x) => x.id === id));\n\t}\n\n\tfunction handleCancelSelectActivity() {\n\t\tsetSelectedActivity(undefined);\n\t}\n\n\tfunction handleFormOpen(id?: string) {\n\t\tid ? handleSelectActivity(id) : handleCancelSelectActivity();\n\t\tsetEditMode(true);\n\t}\n\n\tfunction handleFormClose() {\n\t\tsetEditMode(false);\n\t}\n\n\tfunction handleCreateOrEditActivity(activity: Activity) {\n\t\tactivity.id\n\t\t\t? setActivities([ ...activities.filter((x) => x.id !== activity.id), activity ])\n\t\t\t: setActivities([ ...activities, { ...activity, id: uuid() } ]);\n\t\tsetEditMode(false);\n\t\tsetSelectedActivity(activity);\n\t}\n\n\tfunction handleDeleteActivity(id: string) {\n\t\tsetActivities([ ...activities.filter((x) => x.id !== id) ]);\n\t}\n\treturn (\n\t\t<Fragment>\n\t\t\t<NavBar openForm={handleFormOpen} />\n\t\t\t<Container fluid className=\"mainAppContainer\">\n\t\t\t\t<ActivityDashboard\n\t\t\t\t\tactivities={activities}\n\t\t\t\t\tselectedActivity={selectedActivity}\n\t\t\t\t\tselectActivity={handleSelectActivity}\n\t\t\t\t\tcancelSelectActivity={handleCancelSelectActivity}\n\t\t\t\t\teditMode={editMode}\n\t\t\t\t\topenForm={handleFormOpen}\n\t\t\t\t\tcloseForm={handleFormClose}\n\t\t\t\t\tcreateOrEdit={handleCreateOrEditActivity}\n\t\t\t\t\tdeleteActivity={handleDeleteActivity}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t</Fragment>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}