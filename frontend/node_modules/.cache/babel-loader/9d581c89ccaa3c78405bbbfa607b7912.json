{"ast":null,"code":"var _jsxFileName = \"/home/gm/Downloads/reactivities/frontend/src/app/layout/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport './App.css';\nimport NavBar from './navbar/NavigationBar';\nimport { v4 as uuid } from 'uuid';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\nimport ActivityDashboard from '../../features/activities/activityDashboard/ActivityDashboard';\nimport agent from '../api/agent';\nimport Loader from './Loader';\nimport { useStore } from '../stores/store';\nimport { observer } from 'mobx-react-lite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    activityStore\n  } = useStore();\n  const [selectedActivity, setSelectedActivity] = useState(undefined);\n  const [activities, setActivities] = useState([]);\n  const [editMode, setEditMode] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  useEffect(() => {\n    activityStore.loadActivities;\n  }, []);\n\n  function handleSelectActivity(id) {\n    setSelectedActivity(activities.find(x => x.id === id));\n  }\n\n  function handleCancelSelectActivity() {\n    setSelectedActivity(undefined);\n  }\n\n  function handleFormOpen(id) {\n    id ? handleSelectActivity(id) : handleCancelSelectActivity();\n    setEditMode(true);\n  }\n\n  function handleFormClose() {\n    setEditMode(false);\n  }\n\n  function handleCreateOrEditActivity(activity) {\n    setSubmitting(true);\n\n    if (activity.id) {\n      agent.Activities.update(activity).then(() => {\n        setActivities([...activities.filter(x => x.id !== activity.id), activity]);\n        setSelectedActivity(activity);\n        setEditMode(false);\n        setSubmitting(false);\n      });\n    } else {\n      activity.id = uuid();\n      agent.Activities.create(activity).then(() => {\n        setActivities([...activities, activity]);\n        setSelectedActivity(activity);\n        setEditMode(false);\n        setSubmitting(false);\n      });\n    }\n  }\n\n  function handleDeleteActivity(id) {\n    setSubmitting(true);\n    agent.Activities.delete(id).then(() => {\n      setActivities([...activities.filter(x => x.id !== id)]);\n      setSubmitting(false);\n    });\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      openForm: handleFormOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"mainAppContainer\",\n      children: /*#__PURE__*/_jsxDEV(ActivityDashboard, {\n        activities: activities,\n        selectedActivity: selectedActivity,\n        selectActivity: handleSelectActivity,\n        cancelSelectActivity: handleCancelSelectActivity,\n        editMode: editMode,\n        openForm: handleFormOpen,\n        closeForm: handleFormClose,\n        createOrEdit: handleCreateOrEditActivity,\n        deleteActivity: handleDeleteActivity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"Y4SY+DVc7ZMCFnTtz+pXHN6SBiM=\", false, function () {\n  return [useStore];\n});\n\n_c = App;\nexport default _c2 = observer(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/gm/Downloads/reactivities/frontend/src/app/layout/App.tsx"],"names":["React","Fragment","useEffect","useState","NavBar","v4","uuid","Container","ActivityDashboard","agent","Loader","useStore","observer","App","activityStore","selectedActivity","setSelectedActivity","undefined","activities","setActivities","editMode","setEditMode","loading","setLoading","submitting","setSubmitting","loadActivities","handleSelectActivity","id","find","x","handleCancelSelectActivity","handleFormOpen","handleFormClose","handleCreateOrEditActivity","activity","Activities","update","then","filter","create","handleDeleteActivity","delete"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport './App.css';\nimport { Activity } from '../models/Activity';\nimport NavBar from './navbar/NavigationBar';\nimport { v4 as uuid } from 'uuid';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Button } from 'react-bootstrap';\nimport ActivityDashboard from '../../features/activities/activityDashboard/ActivityDashboard';\nimport agent from '../api/agent';\nimport Loader from './Loader';\nimport { useStore } from '../stores/store';\nimport { observer } from 'mobx-react-lite';\n\nfunction App() {\n\tconst { activityStore } = useStore();\n\tconst [ selectedActivity, setSelectedActivity ] = useState<Activity | undefined>(undefined);\n\tconst [ activities, setActivities ] = useState<Activity[]>([]);\n\tconst [ editMode, setEditMode ] = useState(false);\n\tconst [ loading, setLoading ] = useState(true);\n\tconst [ submitting, setSubmitting ] = useState(false);\n\n\tuseEffect(() => {\n\t\tactivityStore.loadActivities\n\t}, []);\n\n\tfunction handleSelectActivity(id: string) {\n\t\tsetSelectedActivity(activities.find((x) => x.id === id));\n\t}\n\n\tfunction handleCancelSelectActivity() {\n\t\tsetSelectedActivity(undefined);\n\t}\n\n\tfunction handleFormOpen(id?: string) {\n\t\tid ? handleSelectActivity(id) : handleCancelSelectActivity();\n\t\tsetEditMode(true);\n\t}\n\n\tfunction handleFormClose() {\n\t\tsetEditMode(false);\n\t}\n\n\tfunction handleCreateOrEditActivity(activity: Activity) {\n\t\tsetSubmitting(true);\n\t\tif (activity.id) {\n\t\t\tagent.Activities.update(activity).then(() => {\n\t\t\t\tsetActivities([ ...activities.filter((x) => x.id !== activity.id), activity ]);\n\t\t\t\tsetSelectedActivity(activity);\n\t\t\t\tsetEditMode(false);\n\t\t\t\tsetSubmitting(false);\n\t\t\t});\n\t\t} else {\n\t\t\tactivity.id = uuid();\n\t\t\tagent.Activities.create(activity).then(() => {\n\t\t\t\tsetActivities([ ...activities, activity ]);\n\t\t\t\tsetSelectedActivity(activity);\n\t\t\t\tsetEditMode(false);\n\t\t\t\tsetSubmitting(false);\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction handleDeleteActivity(id: string) {\n\t\tsetSubmitting(true);\n\t\tagent.Activities.delete(id).then(() => {\n\t\t\tsetActivities([ ...activities.filter((x) => x.id !== id) ]);\n\t\t\tsetSubmitting(false);\n\t\t});\n\t}\n\n\tif (loading) {\n\t\treturn <Loader />;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<NavBar openForm={handleFormOpen} />\n\t\t\t<Container fluid className=\"mainAppContainer\">\n\t\t\t\t<ActivityDashboard\n\t\t\t\t\tactivities={activities}\n\t\t\t\t\tselectedActivity={selectedActivity}\n\t\t\t\t\tselectActivity={handleSelectActivity}\n\t\t\t\t\tcancelSelectActivity={handleCancelSelectActivity}\n\t\t\t\t\teditMode={editMode}\n\t\t\t\t\topenForm={handleFormOpen}\n\t\t\t\t\tcloseForm={handleFormClose}\n\t\t\t\t\tcreateOrEdit={handleCreateOrEditActivity}\n\t\t\t\t\tdeleteActivity={handleDeleteActivity}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t</Fragment>\n\t);\n}\n\nexport default observer(App);\n"]},"metadata":{},"sourceType":"module"}