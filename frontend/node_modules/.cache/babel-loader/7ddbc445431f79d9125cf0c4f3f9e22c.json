{"ast":null,"code":"import { makeAutoObservable, runInAction } from 'mobx';\nimport agent from '../api/agent';\nimport { v4 as uuid } from 'uuid';\nexport default class ActivityStore {\n  constructor() {\n    this.activities = [];\n    this.selectedActivity = undefined;\n    this.editMode = false;\n    this.loading = false;\n    this.loadingInitial = false;\n\n    this.loadActivities = async () => {\n      //el codigo asincrono se ejecuta fuera del bloque trycatch\n      this.setLoadingInitial(true);\n\n      try {\n        //codigo asincrono sera dentro del bloqye trycatch\n        const activities = await agent.Activities.list();\n        activities.forEach(activity => {\n          activity.date = activity.date.split('T')[0];\n          this.activities.push(activity);\n        });\n        this.setLoadingInitial(false);\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n      }\n    };\n\n    this.setLoadingInitial = state => {\n      this.loadingInitial = state;\n    };\n\n    this.selectActivity = id => {\n      this.selectedActivity = this.activities.find(a => a.id === id);\n    };\n\n    this.cancelSelectedActivity = () => {\n      this.selectedActivity = undefined;\n    };\n\n    this.openForm = id => {\n      id ? this.selectActivity(id) : this.cancelSelectedActivity();\n      this.editMode = true;\n    };\n\n    this.closeForm = () => {\n      this.editMode = false;\n    };\n\n    this.createActivity = async activity => {\n      this.loading = true;\n      activity.id = uuid();\n\n      try {\n        await agent.Activities.create(activity);\n        runInAction(() => {\n          this.activities.push(activity);\n          this.selectedActivity = activity;\n          this.editMode = false;\n        });\n      } catch (error) {\n        console.log(error);\n        runInAction(() => {\n          this.loading = false;\n        });\n      }\n    };\n\n    this.updateActivity = async activity => {\n      this.loading = true;\n\n      try {\n        await agent.Activities.update(activity);\n        runInAction(() => {\n          this.activities.filter(a => a.id !== activity.id);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    makeAutoObservable(this);\n  }\n\n}","map":{"version":3,"sources":["/home/gm/Downloads/reactivities/frontend/src/app/stores/activityStore.ts"],"names":["makeAutoObservable","runInAction","agent","v4","uuid","ActivityStore","constructor","activities","selectedActivity","undefined","editMode","loading","loadingInitial","loadActivities","setLoadingInitial","Activities","list","forEach","activity","date","split","push","error","console","log","state","selectActivity","id","find","a","cancelSelectedActivity","openForm","closeForm","createActivity","create","updateActivity","update","filter"],"mappings":"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","sourcesContent":["import { makeAutoObservable, runInAction } from 'mobx';\nimport agent from '../api/agent';\nimport { Activity } from '../models/Activity';\nimport { v4 as uuid } from 'uuid';\n\nexport default class ActivityStore {\n\tactivities: Activity[] = [];\n\tselectedActivity: Activity | undefined = undefined;\n\teditMode = false;\n\tloading = false;\n\tloadingInitial = false;\n\n\tconstructor() {\n\t\tmakeAutoObservable(this);\n\t}\n\n\tloadActivities = async () => {\n\t\t//el codigo asincrono se ejecuta fuera del bloque trycatch\n\t\tthis.setLoadingInitial(true);\n\t\ttry {\n\t\t\t//codigo asincrono sera dentro del bloqye trycatch\n\t\t\tconst activities = await agent.Activities.list();\n\n\t\t\tactivities.forEach((activity) => {\n\t\t\t\tactivity.date = activity.date.split('T')[0];\n\t\t\t\tthis.activities.push(activity);\n\t\t\t});\n\t\t\tthis.setLoadingInitial(false);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tthis.setLoadingInitial(false);\n\t\t}\n\t};\n\n\tsetLoadingInitial = (state: boolean) => {\n\t\tthis.loadingInitial = state;\n\t};\n\n\tselectActivity = (id: string) => {\n\t\tthis.selectedActivity = this.activities.find((a) => a.id === id);\n\t};\n\n\tcancelSelectedActivity = () => {\n\t\tthis.selectedActivity = undefined;\n\t};\n\n\topenForm = (id?: string) => {\n\t\tid ? this.selectActivity(id) : this.cancelSelectedActivity();\n\t\tthis.editMode = true;\n\t};\n\n\tcloseForm = () => {\n\t\tthis.editMode = false;\n\t};\n\n\tcreateActivity = async (activity: Activity) => {\n\t\tthis.loading = true;\n\t\tactivity.id = uuid();\n\t\ttry {\n\t\t\tawait agent.Activities.create(activity);\n\t\t\trunInAction(() => {\n\t\t\t\tthis.activities.push(activity);\n\t\t\t\tthis.selectedActivity = activity;\n\t\t\t\tthis.editMode = false;\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\trunInAction(() => {\n\t\t\t\tthis.loading = false;\n\t\t\t});\n\t\t}\n\t};\n\n\tupdateActivity = async(activity: Activity) => {\n\t\tthis.loading=true;\n\t\ttry {\n\t\t\tawait agent.Activities.update(activity);\n\t\t\trunInAction(()=> {\n\t\t\t\t\tthis.activities.filter(a => a.id !== activity.id);\n\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}